{
  "openapi": "3.0.3",
  "info": {
    "title": "Electro Scooter API",
    "description": "An API for managing Electro Scooters.",
    "version": "1.0"
  },
  "paths": {
    "/api/electro-scooters/{scooter_id}": {
      "get": {
        "summary": "Get an Electro Scooter by ID",
        "description": "Retrieve an Electro Scooter by its unique ID.",
        "operationId": "getElectroScooter",
        "parameters": [
          {
            "name": "scooter_id",
            "in": "path",
            "description": "ID of the scooter to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of an Electro Scooter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectroScooter"
                }
              }
            }
          },
          "404": {
            "description": "Electro Scooter not found"
          }
        }
      },
      "put": {
        "summary": "Update an Electro Scooter",
        "description": "Update an existing Electro Scooter with the provided data.",
        "operationId": "updateElectroScooter",
        "parameters": [
          {
            "name": "scooter_id",
            "in": "path",
            "description": "ID of the scooter to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Updated Electro Scooter data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "battery_level": {
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Electro Scooter updated successfully"
          },
          "404": {
            "description": "Electro Scooter not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an Electro Scooter",
        "description": "Delete an Electro Scooter by ID.",
        "operationId": "deleteElectroScooter",
        "parameters": [
          {
            "name": "scooter_id",
            "in": "path",
            "description": "ID of the scooter to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Delete-Password",
            "in": "header",
            "description": "Password for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Electro Scooter deleted successfully"
          },
          "401": {
            "description": "Incorrect password"
          },
          "404": {
            "description": "Electro Scooter not found"
          }
        }
      }
    },
    "/api/electro-scooters": {
      "post": {
        "summary": "Create a new Electro Scooter",
        "description": "Create a new Electro Scooter with the provided data.",
        "operationId": "createElectroScooter",
        "requestBody": {
          "description": "Electro Scooter data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "battery_level": {
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Electro Scooter created successfully"
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ElectroScooter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int",
            "description": "Unique identifier for the scooter",
            "example": 10
          },
          "name": {
            "type": "string",
            "description": "Name of the scooter",
            "example": "Scooter 112"
          },
          "battery_level": {
            "type": "number",
            "format": "float",
            "description": "Battery level of the scooter",
            "example": 70.5
          }
        }
      }
    }
  }
}